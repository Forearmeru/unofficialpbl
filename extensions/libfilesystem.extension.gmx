<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>libfilesystem</name>
  <version>1.0.0</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>19/02/19</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>202375362</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>libfilesystem.dll</filename>
      <origname>extensions\libfilesystem.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>202375362</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles>
        <ProxyFile>
          <Name>libfilesystem.dylib</Name>
          <TargetMask>2</TargetMask>
        </ProxyFile>
        <ProxyFile>
          <Name>libfilesystem.so</Name>
          <TargetMask>134217856</TargetMask>
        </ProxyFile>
      </ProxyFiles>
      <functions>
        <function>
          <name>file_copy</name>
          <externalName>file_copy</externalName>
          <kind>12</kind>
          <help>file_copy(fname,newname)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>file_rename</name>
          <externalName>file_rename</externalName>
          <kind>12</kind>
          <help>file_rename(oldname,newname)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>file_exists</name>
          <externalName>file_exists</externalName>
          <kind>12</kind>
          <help>file_exists(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>file_delete</name>
          <externalName>file_delete</externalName>
          <kind>12</kind>
          <help>file_delete(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>file_size</name>
          <externalName>file_size</externalName>
          <kind>12</kind>
          <help>file_size(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_create</name>
          <externalName>directory_create</externalName>
          <kind>12</kind>
          <help>directory_create(dname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_copy</name>
          <externalName>directory_copy</externalName>
          <kind>12</kind>
          <help>directory_copy(dname,newname)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_rename</name>
          <externalName>directory_rename</externalName>
          <kind>12</kind>
          <help>directory_rename(oldname,newname)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_exists</name>
          <externalName>directory_exists</externalName>
          <kind>12</kind>
          <help>directory_exists(dname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_destroy</name>
          <externalName>directory_destroy</externalName>
          <kind>12</kind>
          <help>directory_destroy(dname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_size</name>
          <externalName>directory_size</externalName>
          <kind>12</kind>
          <help>directory_size(dname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_contents</name>
          <externalName>directory_contents</externalName>
          <kind>12</kind>
          <help>directory_contents(dname)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>directory_contents_ext</name>
          <externalName>directory_contents_ext</externalName>
          <kind>12</kind>
          <help>directory_contents_ext(dname,pattern,includedirs)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>filename_absolute</name>
          <externalName>filename_absolute</externalName>
          <kind>12</kind>
          <help>filename_absolute(fname)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>filename_canonical</name>
          <externalName>filename_canonical</externalName>
          <kind>12</kind>
          <help>filename_canonical(fname)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>environment_get_variable</name>
          <externalName>environment_get_variable</externalName>
          <kind>12</kind>
          <help>environment_get_variable(name)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>environment_set_variable</name>
          <externalName>environment_set_variable</externalName>
          <kind>12</kind>
          <help>environment_set_variable(name,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>environment_expand_variables</name>
          <externalName>environment_expand_variables</externalName>
          <kind>12</kind>
          <help>environment_expand_variables(str)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>get_working_directory</name>
          <externalName>get_working_directory</externalName>
          <kind>12</kind>
          <help>get_working_directory()</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>set_working_directory</name>
          <externalName>set_working_directory</externalName>
          <kind>12</kind>
          <help>set_working_directory(dname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>get_program_directory</name>
          <externalName>get_program_directory</externalName>
          <kind>12</kind>
          <help>get_program_directory()</help>
          <returnType>1</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>get_program_filename</name>
          <externalName>get_program_filename</externalName>
          <kind>12</kind>
          <help>get_program_filename()</help>
          <returnType>1</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>get_program_pathname</name>
          <externalName>get_program_pathname</externalName>
          <kind>12</kind>
          <help>get_program_pathname()</help>
          <returnType>1</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
      </functions>
      <constants>
        <constant>
          <name>working_directory</name>
          <value>get_working_directory()</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>program_directory</name>
          <value>get_program_directory()</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>temp_directory</name>
          <value>get_temp_directory()</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>program_filename</name>
          <value>get_program_filename()</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>program_pathname</name>
          <value>get_program_pathname()</value>
          <hidden>0</hidden>
        </constant>
      </constants>
    </file>
    <file>
      <filename>libfilesystem.zip</filename>
      <origname>extensions\libfilesystem.zip</origname>
      <init></init>
      <final></final>
      <kind>4</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>0</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions/>
      <constants/>
    </file>
    <file>
      <filename>libfilesystem.gml</filename>
      <origname>extensions\libfilesystem.gml</origname>
      <init>generate_working_directory</init>
      <final></final>
      <kind>2</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>202375362</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>get_temp_directory</name>
          <externalName>get_temp_directory</externalName>
          <kind>11</kind>
          <help>get_temp_directory()</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>generate_working_directory</name>
          <externalName>generate_working_directory</externalName>
          <kind>11</kind>
          <help>generate_working_directory()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
