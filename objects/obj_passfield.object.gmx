<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_writebox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//define any of these variables in each instance's creation code
//which can be accesses by ctrl + right clicking the instance in the room
//if you do not define them, this code will define them with default values

label = "" //the label to the left of the textfield

label_font = -1 //font for the label, does not have to be monospaced

text = "" //at any time, you can simply retrieve the text variable

font = fnt_couriernew //works best with monospaced font
//if this is a password box, the font doesn't have to be monospaced

width = sprite_width - 4 //the width that text is allowed within

if(!variable_instance_exists(id, "password"))password = false

selected = false //whether this box starts out active or not

//this stuff probably shouldn't be modified
draw_set_font(font) //this is temporary, to determine character width
cw = string_width("*") //the width of a single character
click = false //whether the mouse button is being held down or not (selection)
pos = 1 //the cursor position
left = 1 //the display position (position of leftmost visible character)
sel = 1 //selection position (same as pos if no text selected)
cap = width div cw //maximum number of characters permitted in view

//reads the cursor blink rate from the registry
beam = "|" //the symbol used for the cursor - also in alarm event
blink = 700
if blink != -1 {
blink = blink/1200
blink = room_speed * blink
alarm = blink
}

ini_open("logdata") // Just reopening the same file
text = ini_read_string("logpass", "password", "");
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if beam != "|" {
 beam = "|"
 } else {
  beam = ""
  }
  alarm = blink

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }
if keyboard_string != "" {
if sel != pos {
text = string_delete(text,min(pos,sel),abs(pos-sel))
pos = min(pos,sel)
sel = pos
}
text = string_insert(keyboard_string,text,pos)
pos += string_length(keyboard_string)
sel = pos
if pos - left &gt; cap {
left = pos - cap
} else if left + cap &gt; string_length(text) {
left = max(1,string_length(text) - cap + 1)
}
if pos &lt; left { left = pos }
keyboard_string = ""
alarm = blink
beam = "|"
}


ini_open("logdata") // Just reopening the same file
ini_write_string("logpass", "password",text);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="46">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }

keyboard_clear(vk_delete)
alarm = blink
beam = "|"
if (pos &gt; string_length(text)) &amp;&amp; (sel &gt; string_length(text)) { exit }

if sel = pos {
text = string_delete(text,pos,1)
} else {
text = string_delete(text,min(pos,sel),abs(pos-sel))
pos = min(pos,sel)
}
sel = pos

if left + cap &gt; string_length(text) {
left = max(1,string_length(text) - cap + 1)
}
if pos &lt; left { left = pos }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }

keyboard_clear(vk_right)
alarm = blink
beam = "|"
if !keyboard_check(vk_control) {
if pos &lt;= string_length(text) { pos += 1 }
if pos - left &gt; cap { left += 1 }
} else if pos &lt;= string_length(text) {
do {
pos += 1
if pos - left &gt; cap { left += 1 }
} until (pos &gt; string_length(text) || string_char_at(text,pos-1) = " ")
}
if !keyboard_check(vk_shift) { sel = pos }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }

keyboard_clear(vk_left)
alarm = blink
beam = "|"
if !keyboard_check(vk_control) {
if pos &gt; 1 { pos -= 1 }
if pos &lt; left { left -= 1 }
} else if pos &gt; 1 {
do {
pos -= 1
if pos &lt; left { left -= 1 }
} until (pos = 1 || string_char_at(text,pos-1) = " ")
}
if !keyboard_check(vk_shift) { sel = pos }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="36">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }
alarm = blink
beam = "|"
pos = 1
left = 1
if !keyboard_check(vk_shift) { sel = pos }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="35">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }
alarm = blink
beam = "|"
pos = string_length(text) + 1
left = max(0,string_length(text) - cap + 1)
if !keyboard_check(vk_shift) { sel = pos }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }

keyboard_clear(vk_backspace)
alarm = blink
beam = "|"
if (pos = 1) &amp;&amp; (sel = 1) { exit }

if pos = sel {
text = string_delete(text,pos - 1, 1)
pos -= 1
} else {
text = string_delete(text,min(pos,sel),abs(pos-sel))
pos = min(pos,sel)
}
sel = pos

if left + cap &gt; string_length(text) {
left = max(1,string_length(text) - cap + 1)
}
if pos &lt; left { left = pos }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected { exit }
if !click { exit }
sel = max(min((mouse_x - x) div cw, string_length(text)) + left,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_cursor(cr_default)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_cursor(cr_beam)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>click = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if position_meeting(mouse_x,mouse_y,self) {
alarm = blink
beam = "|"
keyboard_string = ""
selected = true
click = true
pos = min((mouse_x - x) div cw, string_length(text)) + left
if !keyboard_check(vk_shift) { sel = pos }
} else {
selected = false
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var d2,m,p,pl,pr;
draw_set_color(c_black)
draw_set_font(font)
draw_sprite(sprite_index,0,x,y)
draw_set_font(label_font)
draw_text(x , y - 25, label)
draw_set_font(font)


if password {
d2 = ""
for (m = 0; m &lt; string_length(text); m += 1) {
d2 += "*"
}
} else {
d2 = text
}
draw_text(x+4,y,string_copy(d2,left,cap))

if selected {
draw_text(x+min(pos-left,cap)*cw,y,beam)

if sel != pos {
p = min(max(sel,left),left+cap)
draw_rectangle(
x+4+(p-left)*cw,y,
x+4+min(pos-left,cap)*cw,y+sprite_height,false
)
draw_set_color(c_white)
pl = min(pos,p)
pr = max(pos,p)
draw_text(x+4+(pl-left)*cw,y,string_copy(d2,pl,pr-pl))
draw_set_color(c_white)
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected || !keyboard_check(vk_control) || sel = pos { exit }

var d2,m,pl,pr;

if password {
d2 = ""
for (m = 0; m &lt; string_length(text); m += 1) {
d2 += "*"
}
} else {
d2 = text
}

pl = min(pos,sel)
pr = max(pos,sel)
clipboard_set_text(string_copy(d2,pl,pr-pl))

text = string_delete(text,min(pos,sel),abs(pos-sel))
pos = min(pos,sel)
sel = pos

if left + cap &gt; string_length(text) {
left = max(1,string_length(text) - cap)
}
if pos &lt; left { pos = left }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="86">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected || !keyboard_check(vk_control) { exit }
keyboard_string = clipboard_get_text()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected || !keyboard_check(vk_control) || sel = pos { exit }

var d2,m,pl,pr;

if password {
d2 = ""
for (m = 0; m &lt; string_length(text); m += 1) {
d2 += "*"
}
} else {
d2 = text
}

pl = min(pos,sel)
pr = max(pos,sel)
clipboard_set_text(string_copy(d2,pl,pr-pl))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if !selected || !keyboard_check(vk_control) { exit }
sel = 1
pos = string_length(text) + 1
left = max(0,string_length(text) - cap + 1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
